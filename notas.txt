## Notas

== Python
"""

def agente2(prompt):
    try:
        agente2 = client.responses.create(
        model= "gpt-4.1",
        input= prompt
        )
        return agente2.output_text

    except Exception as e:
        st.error(f"Prompt de busqueda inválido: {str(e)}")
        return None

def agente3(respuesta2):
    try:
        agente3 = client.responses.create(
        model= "gpt-4.1",
        input= f"Si la información de {respuesta2} no es suficientemente en cantidad o detalle, optimizala para encontrar leads, segmetarlos y entregame solamente el prompt neceario para generar leads basado en esa información"
        )
        return agente3.output_text

    except Exception as e:
        st.error(f"xdxdxd: {str(e)}")
        return None

def agente4(prompt2):
    try:
        agente4 = client.responses.create(
        model= "gpt-4.1",
        input = f"Dame solamente los leads, con un formato de directorio, donde me digas los correos o numeros de contacto de cada lead, además de una descrpción muy breve de quienes son, basado en {prompt2} y no hagas preguntas finales, ni sugerencias. Además dame datos completamente verídicos y nada genérico"
        )
        return agente4.output_text
    
    except Exception as e:
        st.error(f"Error al encontrar los clientes: {str(e)}")
        return None
"""

            #p2 = agente2(p1)                                #
            #p3 = agente3(p2)                                #
            #p4 = agente4(p3)                                #


..........................................................................
p4 = None
cliente = Cliente(None, None, None, None)

st.markdown("## ¡Bienvenido!")
instrucciones()

with st.sidebar:
    st.header("Ayudame proporcionandome esta información:")

    st.markdown("¿En qué industria estás?")
    ind = st.radio(
        "Selecciona una opción",
        ["Manufactura", "Alimenticia", "Automotriz", "Textil", "Tecnológica", "Otra"],
        )
    if ind == "Otra":
        ind = st.text_input("¿En qué industria estás?")

    with st.form("form", border=False):
        #--------------------------------------------------------------
        pos = st.text_input("¿A quiénes les vendes?",
                            placeholder="Ej: Seguidores de instagram, Mayoristas, Samunsung")
        prod = st.text_input("¿Qué vendes?",
                            placeholder="Ej: Pan, reguladores, etiquetas, diseños")
        zona = st.text_input("¿En qué zona buscas clientes?", 
                            placeholder="Ej: CDMX, Valle de México, Peninsula de Yucatan")
        #--------------------------------------------------------------
        usuario = st.form_submit_button("Aceptar")


if usuario:
    if ind or pos or prod or zona:
        with st.spinner("Buscando clientes..."):
            cliente = Cliente(ind, pos, prod, zona)         #1
            p4 = buscador(agente(cliente))                  #2
            st.success("Clientes potenciales encontrados")  #3
            csv = csv_maker(p4)
            st.markdown("### Vista previa de la información")
            escritor(csv)

    elif pos == None or prod == None or zona == None:
        st.warning("Por favor completa los campos requeridos")
                         
    if p4 != None:
        st.download_button(
            label = "Descargar txt",
            data = str(p4),
            file_name = f"información_{cliente.industria}.txt",
            mime = "text/plain"
        )

        st.download_button(
            label = "Descargar CSV",
            data = csv,
            file_name = f"información_{cliente.industria}.csv",
            mime = "text/csv"
        )


............................................................................
            '''
            query = agente(cliente)
            if query:
                leads = buscador(query)
                print(leads)
                df = tabla(leads)
                st.success("Clientes potenciales encontrados")
                st.dataframe(df)  

                st.download_button(
                    label="Descargar CSV",
                    data=df.to_csv(index=False),
                    file_name=f"leads_{cliente.industria}.csv",
                    mime="text/csv"
                )          
            '''











== Prompts viejos
Dame únicamente el prompt necesario para poder 
buscar información de clientes potenciales en {cliente.industria} 
que sean similares a {cliente.postores} 
y tengan como producto {cliente.producto} 
en {cliente.zona}.




== Actualizaciones de textos
Agroindustria
Alimentos
Arquitectura
Artes/Cultural
Automotriz
Bebidas
Bienes Raíces
Ciberseguridad
Construcción
Consultoría
Contabilidad
Diseño
Dispositivos Médicos
e-commerce
Educación
e-learning
Energía
Entretenimiento
Farmacéutica
Finanzas
Fintech
Fitness/Wellness
Gobierno
Hardware Tecnológico
Hospitales/Clínicas
Hotelería
Inteligencia Artificial
Legal
Logística
Medios
Moda
Nutrición
ONGs/Social
Organismos Gubernamentales
Plásticos
Manufactura
Industrial
Publicidad/Marketing
Química
Recursos Humanos
Retail/Comercio
Salud
Seguros
Software
Suplementos
Telecomunicaciones
Textil
Transporte
Turismo
Videojuegos